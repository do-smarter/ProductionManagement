// <auto-generated />
using System;
using Erfa.ProductionManagement.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Erfa.ProductionManagement.Persistance.Migrations
{
    [DbContext(typeof(ErfaDbContext))]
    partial class ErfaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Erfa.PruductionManagement.Domain.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProductWeight")
                        .HasColumnType("float");

                    b.Property<double>("ProductionTimeSec")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = new Guid("450e645a-66cc-45d2-bfb7-9bb640f393c3"),
                            Category = "Shelv",
                            CreatedBy = "Magdalena",
                            CreatedDate = new DateTime(2023, 6, 20, 23, 29, 11, 928, DateTimeKind.Local).AddTicks(3270),
                            Description = "Very nice piece of metal",
                            LastModifiedBy = "Magdalena",
                            LastModifiedDate = new DateTime(2023, 6, 20, 23, 29, 11, 928, DateTimeKind.Local).AddTicks(3272),
                            ProductNumber = "XYZ123",
                            ProductWeight = 100.0,
                            ProductionTimeSec = 100.0
                        },
                        new
                        {
                            Id = new Guid("dac8fc7b-75f9-409e-ac34-5a7c789a0c71"),
                            Category = "Shelv",
                            CreatedBy = "Magdalena",
                            CreatedDate = new DateTime(2023, 6, 20, 23, 29, 11, 928, DateTimeKind.Local).AddTicks(3278),
                            Description = "Not so nice piece of metal",
                            LastModifiedBy = "Magdalena",
                            LastModifiedDate = new DateTime(2023, 6, 20, 23, 29, 11, 928, DateTimeKind.Local).AddTicks(3280),
                            ProductNumber = "ABC987",
                            ProductWeight = 50.0,
                            ProductionTimeSec = 50.0
                        });
                });

            modelBuilder.Entity("Erfa.PruductionManagement.Domain.Entities.ItemHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ArchiveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ArchivedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProductWeight")
                        .HasColumnType("float");

                    b.Property<double>("ProductionTimeSec")
                        .HasColumnType("float");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ArchivedItems");
                });

            modelBuilder.Entity("Erfa.PruductionManagement.Domain.Entities.ProductionGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsMerged")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductionGroups");
                });

            modelBuilder.Entity("Erfa.PruductionManagement.Domain.Entities.ProductionItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProductionGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("RalGalv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("ProductionGroupId");

                    b.ToTable("ProductionItems");
                });

            modelBuilder.Entity("Erfa.PruductionManagement.Domain.Entities.ProductionItem", b =>
                {
                    b.HasOne("Erfa.PruductionManagement.Domain.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Erfa.PruductionManagement.Domain.Entities.ProductionGroup", null)
                        .WithMany("ProductionItems")
                        .HasForeignKey("ProductionGroupId");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Erfa.PruductionManagement.Domain.Entities.ProductionGroup", b =>
                {
                    b.Navigation("ProductionItems");
                });
#pragma warning restore 612, 618
        }
    }
}
